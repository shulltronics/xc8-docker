%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/main.obj
cinit CODE 0 1FFFA 1FFFA 6 1
text0 CODE 0 1FFF6 1FFF6 4 1
$build/startup.obj
init CODE 0 0 0 4 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-E87 1
SFR E8D-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
BANK8 800-8FF 1
BANK9 900-9FF 1
CONST 4-1FFF5 1
IDLOC 200000-20000F 1
STACK 60-E87 1
SMALLCONST F00-1FFF5 1
CODE 4-1FFF5 1
BANK10 A00-AFF 1
BANK11 B00-BFF 1
BANK12 C00-CFF 1
BANK13 D00-DFF 1
BANK14 E00-E87 1
BIGRAM 1-E87 1
COMRAM 1-5F 1
CONFIG 300000-30000B 1
EEDATA 310000-3103FF 1
MEDIUMCONST F00-FFFF 1
MEDIUMCONST 10F00-1FFF5 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/main.obj
1FFF6 text0 CODE >3:/home/src/main.c
1FFF6 text0 CODE >6:/home/src/main.c
1FFFA cinit CODE >1044:/home/build/main.as
1FFFA cinit CODE >1046:/home/build/main.as
1FFFA cinit CODE >1049:/home/build/main.as
1FFFA cinit CODE >1055:/home/build/main.as
1FFFA cinit CODE >1057:/home/build/main.as
1FFFC cinit CODE >1058:/home/build/main.as
$build/startup.obj
0 init CODE >88:/home/build/startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst build/main.obj
__Hspace_0 20000 0 ABS 0 - build/main.obj
__Hspace_1 0 0 ABS 0 - build/main.obj
__Hspace_2 0 0 ABS 0 - build/main.obj
__Hspace_4 0 0 ABS 0 - build/main.obj
__Hibigdata 0 0 CODE 0 ibigdata build/main.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst build/startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data build/main.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst build/main.obj
___sp 0 0 STACK 2 stack build/startup.obj
_main 1FFF6 0 CODE 0 text0 build/main.obj
start 0 0 CODE 0 init build/startup.obj
__size_of_main 0 0 ABS 0 - build/main.obj
__Hpowerup 0 0 CODE 0 powerup build/main.obj
__accesstop 60 0 ABS 0 - build/startup.obj
intlevel0 0 0 CODE 0 text build/startup.obj
intlevel1 0 0 CODE 0 text build/startup.obj
intlevel2 0 0 CODE 0 text build/startup.obj
intlevel3 0 0 CODE 0 text build/startup.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM build/main.obj
__Hifardata 0 0 CODE 0 ifardata build/main.obj
__Hclrtext 0 0 ABS 0 clrtext build/main.obj
___inthi_sp 0 0 STACK 2 stack build/startup.obj
___intlo_sp 0 0 STACK 2 stack build/startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body build/main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs build/main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst build/main.obj
__Hintcodelo 0 0 CODE 0 intcodelo build/main.obj
__Lintcodelo 0 0 CODE 0 intcodelo build/main.obj
start_initialization 1FFFA 0 CODE 0 cinit build/main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM build/main.obj
___rparam_used 1 0 ABS 0 - build/main.obj
isa$xinst 0 0 ABS 0 - build/startup.obj
__Hbank0 0 0 ABS 0 bank0 build/main.obj
__Hbank1 0 0 ABS 0 bank1 build/main.obj
__Hbank2 0 0 ABS 0 bank2 build/main.obj
__Hbank3 0 0 ABS 0 bank3 build/main.obj
__Hbank4 0 0 ABS 0 bank4 build/main.obj
__Hbank5 0 0 ABS 0 bank5 build/main.obj
__Hbank6 0 0 ABS 0 bank6 build/main.obj
__Hbank7 0 0 ABS 0 bank7 build/main.obj
__Hbank8 0 0 ABS 0 bank8 build/main.obj
__Hbank9 0 0 ABS 0 bank9 build/main.obj
__Hcinit 0 0 ABS 0 cinit build/main.obj
__Hconst 0 0 CONST 0 const build/main.obj
__Hidata 0 0 CODE 0 idata build/main.obj
__Hidloc 0 0 ABS 0 idloc build/main.obj
__Hnvbit 0 0 COMRAM 1 nvbit build/main.obj
__Hparam 0 0 COMRAM 1 rparam build/main.obj
__Hrdata 0 0 COMRAM 1 rdata build/main.obj
__Hstack 0 0 STACK 2 stack build/main.obj
__Htext0 0 0 ABS 0 text0 build/main.obj
__Hbank10 0 0 ABS 0 bank10 build/main.obj
__Hbank11 0 0 ABS 0 bank11 build/main.obj
__Hbank12 0 0 ABS 0 bank12 build/main.obj
__Hbank13 0 0 ABS 0 bank13 build/main.obj
__Hbank14 0 0 ABS 0 bank14 build/main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss build/main.obj
__Hbigram 0 0 ABS 0 bigram build/main.obj
__smallconst 0 0 SMALLCONST 0 smallconst build/startup.obj
__Hcomram 0 0 ABS 0 comram build/main.obj
__Hconfig 0 0 ABS 0 config build/main.obj
__Lbank0 0 0 ABS 0 bank0 build/main.obj
__Lbank1 0 0 ABS 0 bank1 build/main.obj
__Lbank2 0 0 ABS 0 bank2 build/main.obj
__Lbank3 0 0 ABS 0 bank3 build/main.obj
__Lbank4 0 0 ABS 0 bank4 build/main.obj
__Lbank5 0 0 ABS 0 bank5 build/main.obj
__Lbank6 0 0 ABS 0 bank6 build/main.obj
__Lbank7 0 0 ABS 0 bank7 build/main.obj
__Lbank8 0 0 ABS 0 bank8 build/main.obj
__Lbank9 0 0 ABS 0 bank9 build/main.obj
__Lcinit 0 0 ABS 0 cinit build/main.obj
__Lconst 0 0 CONST 0 const build/main.obj
__Lidata 0 0 CODE 0 idata build/main.obj
__Lidloc 0 0 ABS 0 idloc build/main.obj
__Lnvbit 0 0 COMRAM 1 nvbit build/main.obj
__Lparam 0 0 COMRAM 1 rparam build/main.obj
__Lrdata 0 0 COMRAM 1 rdata build/main.obj
__Lstack 0 0 STACK 2 stack build/main.obj
__Ltext0 0 0 ABS 0 text0 build/main.obj
__Hfarbss 0 0 FARRAM 0 farbss build/main.obj
__Lintcode_body 0 0 ABS 0 intcode_body build/main.obj
__Habs1 0 0 ABS 0 abs1 build/main.obj
__Hdata 0 0 ABS 0 data build/main.obj
__Hinit 4 0 CODE 0 init build/main.obj
__Hrbit 0 0 COMRAM 1 rbit build/main.obj
__Hrbss 0 0 COMRAM 1 rbss build/main.obj
__Htemp 0 0 COMRAM 1 temp build/main.obj
__Htext 0 0 ABS 0 text build/main.obj
__Labs1 0 0 ABS 0 abs1 build/main.obj
__Ldata 0 0 ABS 0 data build/main.obj
__Linit 0 0 CODE 0 init build/main.obj
__Lrbit 0 0 COMRAM 1 rbit build/main.obj
__Lrbss 0 0 COMRAM 1 rbss build/main.obj
__Ltemp 0 0 COMRAM 1 temp build/main.obj
__Ltext 0 0 ABS 0 text build/main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM build/main.obj
__Hintret 0 0 ABS 0 intret build/main.obj
__Hirdata 0 0 CODE 0 irdata build/main.obj
__S0 20000 0 ABS 0 - build/main.obj
__S1 0 0 ABS 0 - build/main.obj
__S2 0 0 ABS 0 - build/main.obj
__S4 0 0 ABS 0 - build/main.obj
__S5 0 0 ABS 0 - build/main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata build/main.obj
__Hnvrram 0 0 COMRAM 1 nvrram build/main.obj
__Lintentry 0 0 ABS 0 intentry build/main.obj
__Hramtop F00 0 RAM 0 ramtop build/main.obj
__Hrparam 0 0 COMRAM 1 rparam build/main.obj
__activetblptr 0 0 ABS 0 - build/main.obj
__Hstruct 0 0 COMRAM 1 struct build/main.obj
__Lbank10 0 0 ABS 0 bank10 build/main.obj
__Lbank11 0 0 ABS 0 bank11 build/main.obj
__Lbank12 0 0 ABS 0 bank12 build/main.obj
__Lbank13 0 0 ABS 0 bank13 build/main.obj
__Lbank14 0 0 ABS 0 bank14 build/main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss build/main.obj
__Lbigram 0 0 ABS 0 bigram build/main.obj
__Lcomram 0 0 ABS 0 comram build/main.obj
__Lconfig 0 0 ABS 0 config build/main.obj
__Lfarbss 0 0 FARRAM 0 farbss build/main.obj
__Lfardata 0 0 FARRAM 0 fardata build/main.obj
isa$std 1 0 ABS 0 - build/startup.obj
stackhi E87 0 ABS 0 - build/startup.obj
stacklo 60 0 ABS 0 - build/startup.obj
__Lintcode 0 0 CODE 0 intcode build/main.obj
__Lintret 0 0 ABS 0 intret build/main.obj
__Lirdata 0 0 CODE 0 irdata build/main.obj
__Lspace_0 0 0 ABS 0 - build/main.obj
__Lspace_1 0 0 ABS 0 - build/main.obj
__Lspace_2 0 0 ABS 0 - build/main.obj
__Lspace_4 0 0 ABS 0 - build/main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM build/main.obj
end_of_initialization 1FFFA 0 CODE 0 cinit build/main.obj
__Lnvrram 0 0 COMRAM 1 nvrram build/main.obj
__Hintentry 0 0 ABS 0 intentry build/main.obj
__Hreset_vec 0 0 CODE 0 reset_vec build/main.obj
__Lramtop F00 0 RAM 0 ramtop build/main.obj
__Lrparam 0 0 COMRAM 1 rparam build/main.obj
__pcinit 1FFFA 0 CODE 0 cinit build/main.obj
__ptext0 1FFF6 0 CODE 0 text0 build/main.obj
__Lstruct 0 0 COMRAM 1 struct build/main.obj
__ramtop F00 0 RAM 0 ramtop build/startup.obj
__Lpowerup 0 0 CODE 0 powerup build/main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data build/main.obj
__Lreset_vec 0 0 CODE 0 reset_vec build/main.obj
___param_bank 0 0 ABS 0 - build/main.obj
__Hbigdata 0 0 BIGRAM 1 bigdata build/main.obj
__end_of__initialization 1FFFA 0 CODE 0 cinit build/main.obj
__Libigdata 0 0 CODE 0 ibigdata build/main.obj
__Lclrtext 0 0 ABS 0 clrtext build/main.obj
__pcstackCOMRAM 0 0 COMRAM 1 cstackCOMRAM build/main.obj
__end_of_main 1FFFA 0 CODE 0 text0 build/main.obj
__HRAM 0 0 ABS 0 - build/main.obj
__Hbss 0 0 RAM 1 bss build/main.obj
__Hram 0 0 ABS 0 ram build/main.obj
__Hsfr 0 0 ABS 0 sfr build/main.obj
__LRAM 1 0 ABS 0 - build/main.obj
__Lbss 0 0 RAM 1 bss build/main.obj
__Lram 0 0 ABS 0 ram build/main.obj
__Lsfr 0 0 ABS 0 sfr build/main.obj
__initialization 1FFFA 0 CODE 0 cinit build/main.obj
__Hfardata 0 0 FARRAM 0 fardata build/main.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst build/main.obj
__Lifardata 0 0 CODE 0 ifardata build/main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs build/main.obj
__Hintcode 0 0 CODE 0 intcode build/main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 1FFFA 1FFFA 6 1
text0 0 1FFF6 1FFF6 4 1
reset_vec 0 0 0 4 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
